name: OWASP ZAP Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # Allow manual triggering

jobs:
  zap-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Start FastAPI application
        run: |
          nohup python -m uvicorn main:app --host 0.0.0.0 --port 8000 &
          echo "Waiting for application to start..."
          sleep 10
      
      - name: ZAP Scan
        uses: zaproxy/action-full-scan@v0.7.0
        with:
          target: 'http://localhost:8000'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'
          allow_issue_writing: true
      
      - name: Create ZAP Report Directory
        run: mkdir -p .zap-report
      
      - name: Generate HTML Report
        run: |
          docker run --rm -v $(pwd):/zap/wrk/:rw -t owasp/zap2docker-stable:latest \
          zap-full-scan.py -t http://host.docker.internal:8000 -g gen.conf -r zap-report.html -x zap-report.xml -J zap-report.json
          mv zap-report.html .zap-report/
          mv zap-report.json .zap-report/
          mv zap-report.xml .zap-report/
      
      - name: Upload ZAP HTML Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-html-report
          path: .zap-report/zap-report.html
      
      - name: Upload ZAP JSON Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-json-report
          path: .zap-report/zap-report.json
      
      - name: Upload ZAP XML Report
        uses: actions/upload-artifact@v3
        with:
          name: zap-xml-report
          path: .zap-report/zap-report.xml
      
      - name: Check for vulnerabilities in report
        run: |
          if grep -q "alert" .zap-report/zap-report.json; then
            echo "Vulnerabilities found in the application!"
            exit 0
          else
            echo "No vulnerabilities found. This is unexpected since the app has intentional vulnerabilities."
            exit 1
          fi
